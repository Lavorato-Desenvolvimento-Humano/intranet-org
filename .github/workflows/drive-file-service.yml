name: Drive File Service CI/CD

on:
  push:
    branches:
      - develop
      - staging
      - main
    paths:
      - "drive-microservices/**"
      - ".github/workflows/drive-file-service.yml"
  pull_request:
    branches:
      - develop
      - staging
      - main
    paths:
      - "drive-microservices/**"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build Drive Microservices
        run: |
          cd drive-microservices
          echo "Building Drive File Service..."

          # Build usando Maven multi-módulo (após POMs corrigidos)
          mvn clean package -Dfile.encoding=UTF-8 -DskipTests -pl shared/drive-common,services/drive-file-service

          echo "JAR criado:"
          ls -la services/drive-file-service/target/

      - name: Autenticar no GHCR
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build e Push Docker Image
        if: github.event_name != 'pull_request'
        run: |
          cd drive-microservices/services/drive-file-service

          IMAGE_TAG=${{ github.ref_name }}
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/$REPO_LOWERCASE/drive-file-service:$IMAGE_TAG"

          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    name: Deploy Drive File Service
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')

    steps:
      - name: Configurar SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy na VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'ENDSSH'
            echo "Deploying Drive File Service..."
            
            mkdir -p /opt/deploy/drive-microservices/${{ github.ref_name }}
            cd /opt/deploy/drive-microservices/${{ github.ref_name }}
            
            REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            
            # Usar docker-compose existente do projeto
            if [ ! -f "docker-compose.yml" ]; then
              # Copiar do repositório ou criar versão básica
              cat > docker-compose.yml << 'COMPOSE_EOF'
          version: '3.8'

          services:
            postgres:
              image: postgres:15
              environment:
                POSTGRES_DB: drive_db
                POSTGRES_USER: drive_user
                POSTGRES_PASSWORD: drive_pass
              ports:
                - "5434:5432"
              volumes:
                - postgres_data:/var/lib/postgresql/data
                - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

            minio:
              image: minio/minio:latest
              ports:
                - "9000:9000"
                - "9001:9001"
              environment:
                MINIO_ROOT_USER: minioadmin
                MINIO_ROOT_PASSWORD: minioadmin
              command: server /data --console-address ":9001"
              volumes:
                - minio_data:/data

            drive-file-service:
              image: ghcr.io/REPO_PLACEHOLDER/drive-file-service:BRANCH_PLACEHOLDER
              restart: always
              depends_on:
                - postgres
                - minio
              environment:
                - SPRING_PROFILES_ACTIVE=docker
                - DB_HOST=postgres
                - DB_NAME=drive_db
                - DB_USER=drive_user
                - DB_PASSWORD=drive_pass
                - MINIO_URL=http://minio:9000
                - MINIO_ACCESS_KEY=minioadmin
                - MINIO_SECRET_KEY=minioadmin
              ports:
                - "8444:8444"
              volumes:
                - drive_uploads:/app/uploads

          volumes:
            postgres_data:
            minio_data:
            drive_uploads:
          COMPOSE_EOF
              
              sed -i "s|REPO_PLACEHOLDER|$REPO_LOWERCASE|g" docker-compose.yml
              sed -i "s|BRANCH_PLACEHOLDER|${{ github.ref_name }}|g" docker-compose.yml
            fi
            
            # Usar init-db.sql existente
            if [ ! -f "scripts/init-db.sql" ]; then
              mkdir -p scripts
              cat > scripts/init-db.sql << 'SQL_EOF'
          CREATE SCHEMA IF NOT EXISTS drive_files;
          GRANT ALL PRIVILEGES ON SCHEMA drive_files TO drive_user;
          SQL_EOF
            fi
            
            docker pull ghcr.io/$REPO_LOWERCASE/drive-file-service:${{ github.ref_name }}
            docker-compose up -d
            
            echo "Deploy concluído!"
            docker-compose ps
          ENDSSH
