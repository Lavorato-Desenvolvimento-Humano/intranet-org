name: Backend CI/CD

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Construir e Testar Backend
        run: |
          cd apps/backend
          mvn clean verify

      - name: Criar e publicar Docker Image
        run: |
          cd apps/backend
          IMAGE_TAG=${{ github.ref_name }}
          docker build -t meuusuario/backend:$IMAGE_TAG .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push meuusuario/backend:$IMAGE_TAG

          - name: Definir variáveis de ambiente
          run: |
            if [ "${{ github.ref_name }}" == "develop" ]; then
              echo "SERVER_HOST=${{ secrets.SERVER_HOST_DEVELOP }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SERVER_USER_DEVELOP }}" >> $GITHUB_ENV
              echo "SERVER_KEY=${{ secrets.SERVER_KEY_DEVELOP }}" >> $GITHUB_ENV
            elif [ "${{ github.ref_name }}" == "staging" ]; then
              echo "SERVER_HOST=${{ secrets.SERVER_HOST_STAGING }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SERVER_USER_STAGING }}" >> $GITHUB_ENV
              echo "SERVER_KEY=${{ secrets.SERVER_KEY_STAGING }}" >> $GITHUB_ENV
            elif [ "${{ github.ref_name }}" == "main" ]; then
              echo "SERVER_HOST=${{ secrets.SERVER_HOST_MAIN }}" >> $GITHUB_ENV
              echo "SERVER_USER=${{ secrets.SERVER_USER_MAIN }}" >> $GITHUB_ENV
              echo "SERVER_KEY=${{ secrets.SERVER_KEY_MAIN }}" >> $GITHUB_ENV
            fi

  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Deploy no Servidor via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SERVER_KEY }}
          script: |
            cd /caminho/para/deploy/${{ github.ref_name }}
            docker-compose down
            docker pull meuusuario/backend:${{ github.ref_name }}
            docker-compose up -d
