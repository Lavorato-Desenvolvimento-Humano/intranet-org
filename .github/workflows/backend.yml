name: Backend CI/CD

on:
  push:
    branches:
      - develop
      - staging
      - main
    paths:
      - "apps/backend/**"
      - ".github/workflows/backend-ci-cd.yml"
  pull_request:
    branches:
      - develop
      - staging
      - main
    paths:
      - "apps/backend/**"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      # Nova etapa: Corrigir explicitamente a codificação dos arquivos
      - name: Verificar e Corrigir Codificação de Arquivos
        run: |
          cd apps/backend
          echo "Verificando arquivos de propriedades..."
          find src/main/resources -name "*.properties" -exec file -i {} \;

          echo "Convertendo arquivos para UTF-8..."
          for f in $(find src/main/resources -name "*.properties"); do
            echo "Convertendo $f"
            # Primeiro tenta detectar se é UTF-8 ou Latin-1
            CHARSET=$(file -bi "$f" | awk -F "=" '{print $2}')
            if [[ "$CHARSET" != "utf-8" ]]; then
              # Se não for UTF-8, converte de ISO-8859-1 para UTF-8
              iconv -f ISO-8859-1 -t UTF-8 "$f" > "$f.tmp" && mv "$f.tmp" "$f"
              echo "$f convertido para UTF-8"
            else
              echo "$f já está em UTF-8"
            fi
          done

          # Verifique se há BOM no início dos arquivos
          echo "Removendo BOM se existir..."
          for f in $(find src/main/resources -name "*.properties"); do
            if hexdump -C "$f" | head -1 | grep -q "ef bb bf"; then
              # Remove BOM
              tail -c +4 "$f" > "$f.tmp" && mv "$f.tmp" "$f"
              echo "BOM removido de $f"
            fi
          done

      # Adicionar o parâmetro para pular o processamento de recursos, se necessário
      - name: Construir e Testar Backend
        run: |
          cd apps/backend
          # Use esta linha se ainda houver problemas
          # mvn clean verify -Dmaven.resources.skip=true -DskipTests
          # Ou tente esta se preferir processar recursos manualmente
          mvn clean package -Dfile.encoding=UTF-8

      - name: Autenticar no GitHub Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Criar e publicar Docker Image
        if: github.event_name != 'pull_request'
        run: |
          cd apps/backend
          IMAGE_TAG=${{ github.ref_name }}
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$REPO_LOWERCASE/backend:$IMAGE_TAG .
          docker push ghcr.io/$REPO_LOWERCASE/backend:$IMAGE_TAG

  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar chave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # Deploy com resolução do problema da caixa alta vs baixa
      - name: Deploy no Servidor
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'ENDSSH'
            cd /opt/deploy/${{ github.ref_name }}
            
            # Atualizar o arquivo .env para usar o nome do repositório em minúsculas
            REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            sed -i "s|GITHUB_REPOSITORY=.*|GITHUB_REPOSITORY=$REPO_LOWERCASE|" .env
            
            # Verificar a imagem correta
            echo "Usando repositório: $REPO_LOWERCASE e ambiente: ${{ github.ref_name }}"
            
            # Pull da imagem
            docker pull ghcr.io/$REPO_LOWERCASE/backend:${{ github.ref_name }}
            
            # Restartar apenas o serviço de backend
            docker-compose stop backend || true
            docker-compose rm -f backend || true
            docker-compose up -d backend
          ENDSSH
